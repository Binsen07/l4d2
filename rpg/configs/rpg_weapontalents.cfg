//	THE FIRST MENU THAT OPENS MUST BE NAMED "MainMenu"
"market"								// "market" will appear as the option in menus.
{
	"team?"			"2"					// We search for the "team?" key and read its value to determine if this version of "market" is displayed to the user.
	"menutext?"		"weapons"			// drawn in white, non-selectable text under the menu option if "menutext" is the value.
	"menutext?"		"health"
	"menutext?"		"grenades"
	"command?"		"market"
	"target?"		"market_options"	// If the "market" option is selected, display the menu for "market_options"
	"targetname?"	"MainMenu"			// if the displayed menu is "MainMenu" then any header and its keys will be displayed. "MainMenu" is ALWAYS used for the very top menu.
}
"survivor"
{
	"team?"			"2"
	"menutext?"		"talents"
	"menutext?"		"buffs"				// Assign upgrades a "identifier?" "1234" and we store the identifier along with the active time unix timestamp. using adtarray to monitor user-made upgrades,etc. possible yay!
	"menutext?"		"upgrades"			// Players can "temporarily" upgrade the effectiveness / damage / experience earned of specific weapons they've spent experience on unlocking 
	"command?"		"survivor"
	"target?"		"survivor_options"
	"targetname?"	"MainMenu"
}
"character"
{
	"team?"			"123"
	"menutext?"		"character_sheet"
	"menutext?"		"character_backpack"
	"command?"		"character"
	"target?"		"character_options"
	"targetname?"	"MainMenu"
}
"settings"
{
	"team?"			"123"
	"menutext?"		"handicap"
	"menutext?"		"attributes"
	"command?"		"settings"
	"target?"		"global_settings"
	"targetname?"	"MainMenu"
}

// Market Menu
"weapons"
{
	"team?"			"2"
	"menutext?"		"weapons description"	// Menutext can also be used for length translation descriptions.
	"command?"		"weapons"
	"target?"		"market_weapons"
	"targetname?"	"market_options"
	"previous?"		"MainMenu"				// Only one option in each submenu needs this, and that's so the previous menu option knows where to send you.
}
"health"
{
	"team?"			"2"
	"menutext?"		"health description"
	"command?"		"health"
	"target?"		"market_health"
	"targetname?"	"market_options"
}
"grenades"
{
	"team?"			"2"
	"menutext?"		"grenades description"
	"command?"		"grenades"
	"target?"		"market_grenades"
	"targetname?"	"market_options"
}

// Weapons Menu
"assault rifles"
{
	"team?"			"2"
	"menutext?"		"assault rifles description"
	"command?"		"assault"
	"target?"		"market_weapons_assault"
	"targetname?"	"market_weapons"
	"previous?"		"market_options"
}
"sniper rifles"
{
	"team?"			"2"
	"menutext?"		"sniper rifles description"
	"command?"		"sniper"
	"target?"		"market_weapons_sniper"
	"targetname?"	"market_weapons"
}
"shotguns"
{
	"team?"			"2"
	"menutext?"		"shotguns description"
	"command?"		"shotgun"
	"target?"		"market_weapons_shotgun"
	"targetname?"	"market_weapons"
}
"secondary"
{
	"team?"			"2"
	"menutext?"		"secondary description"
	"command?"		"secondary"
	"target?"		"market_weapons_secondary"
	"targetname?"	"market_weapons"
}

// Assault Rifles Menu
"m4a1"
{
	"team?"			"2"
	"locked text?"	"m4a1 description locked"	// Items that have experience / point / etc. costs have special modifiers to include in the translations file for positioning.
	"menutext?"		"m4a1 description"			// Menutext is replaced by "locked text?" if the item requires unlocking, and the client hasn't unlocked it.
	"header text?"	"1"							// If set to 1, locked text / menu text will appear on the same line as the item name.
	"unlocked?"		"0"							// If set to 1, the item doesn't require unlocking to purchase.
	"unlock cost?"	"1000"						// The unlock cost (in experience) -> {U} in the translations file.
	"search key?"	"m4a1_weapon"				// This search key will be used to both order and find any purchaseable item in the plugin database.
	"point cost?"	"20.0"						// The point cost to buy this item (after it is unlocked) -> {P} in the translations file.
	"total cost?"	"0.0"						// The total point cost will take the point cost or the percentage of point cost (0.0 - 1.0) to determine cost. If 0.0, ignored. -> May override {P} if value is greater.
	"command?"		"m4a1"						// To include this command in the translations, use {C}
	"target?"		"market_weapons_assault"	// When the target is the same menu as the item is in, the menu will just reload.
	"targetname?"	"market_weapons_assault"
	"previous?"		"market_weapons"
}